name: Angular
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Deploy Angular App
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:

      - name: Get latest code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM Modules
        run: npm ci

      - name: Build Project
        run: npm run build:prod

      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:

      - name: Get latest code
        uses: actions/checkout@v2

      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: deploy_dist

      - name: Deploy
        uses: kersvers/s3-sync-with-cloudfront-invalidation@v1.0.0
        with:
          args: --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
          SOURCE_DIR: 'deploy_dist/fr'
